<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> <!-- 클래스 선언에 어노테이션을 이용해서 컨트롤러를 작성할 수 있다는 선언 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!--  <resources>는 웹에서 이미지나 CSS, JavaScript 파일과 같이 고정된 자원들의 위치를 의미 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<!-- InternalResourceViewResolver 부분은 뷰를 어떻게 처리하는 가에 대한 설정,
	'/WEB-INF/view/' 라는 경고... 'WEB-INF'는 절대로 브라우저에서 직접 접근할 수 없는 경로이기 때문에 컨트롤러의 
	호출이 우선되는 모델2 방식에 맞는 구조 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="org.zerock.web" />
	<!--  <component-scan> 의미도 상당히 중요, component-scan은 base-package 속성값에 해당하는 패키지 내부의 클래스들을
	조사한다는 뜻... 이는 <annotaion-driven>과 같이 결합해서 해당 패키지에 어노테이션 처리가 된 컨트롤러를 작성만 해주면 자동으로
	인식되게 한다
	 -->
	
	
</beans:beans>
