<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.search.SearchMapper">

	<select id="getTime" resultType="string">
		select now()
	</select>

	<select id="search2" resultType="string">

		select title from tbl_board

		<foreach collection="_parameter.entrySet()" index="idx"
			item="keyword">

			<if test="idx == 't'.toString()">
				title like concat('%',#{keyword},'%')
			</if>
			<if test="idx == 'c'.toString()">
				content like concat('%',#{keyword},'%')
			</if>
			<if test="idx == 'w'.toString()">
				writer like concat('%',#{keyword},'%')
			</if>

		</foreach>

	</select>
	<sql id="search">
	
	<where>
			<foreach collection="_parameter.entrySet()" index="key"
				item="val" open="(" close=")" separator=" OR">

				<if test="key eq 't'.toString()">
					title like concat('%',#{val}, '%')
				</if>
				<if test="key eq 'c'.toString()">
					content like concat('%',#{val}, '%')
				</if>
				<if test="key eq 'w'.toString()">
					writer like concat('%',#{val}, '%')
				</if>
			</foreach>
		</where>
		
	</sql>

	<select id='map1' resultType="string">
		select title from tbl_board
		
		<include refid="search"></include>	<!-- 이 구문이 있으면 동적 sql 재사용 가능함 -->
		
		limit 0,10
	</select>

	<select id="arr1" resultType="string">

		select title from tbl_ board
		<where>
			<if test="arr !=null">
				<foreach collection="arr" item="item" open="(" close=")"
					separator=" OR">
					<if test="item eq 't'.toString()">
						title like concat('%',#{keyword}, '%')
					</if>
					<if test="item eq 'c'.toString()">
						content like concat('%',#{keyword}, '%')
					</if>
					<if test="item eq 'w'.toString()">
						writer like concat('%',#{keyword}, '%')
					</if>
				</foreach>
			</if>
		</where>
		limit 0,10
	</select>

	<select id="search1" resultType="string">

		select title from tbl_board
		where ${type} = #{keyword}
		order by ${type} desc
	</select>

</mapper>